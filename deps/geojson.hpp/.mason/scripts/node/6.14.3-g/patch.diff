diff --git a/Makefile b/Makefile
index 523a3d8..d1e7fce 100644
--- a/Makefile
+++ b/Makefile
@@ -57,7 +57,7 @@ V ?= 1
 ifeq ($(BUILDTYPE),Release)
 all: out/Makefile $(NODE_EXE)
 else
-all: out/Makefile $(NODE_EXE) $(NODE_G_EXE)
+all: out/Makefile $(NODE_G_EXE)
 endif

 # The .PHONY is needed to ensure that we recursively use the out/Makefile
@@ -733,7 +733,7 @@ endif

 $(BINARYTAR): release-only
 	$(RM) -r $(BINARYNAME)
-	$(RM) -r out/deps out/Release
+	$(RM) -r out/deps out/Debug
 	$(PYTHON) ./configure \
 		--prefix=/ \
 		--dest-cpu=$(DESTCPU) \
@@ -902,4 +902,3 @@ endif
         bench-ci lint-js-ci doc-only $(TARBALL)-headers test-ci test-ci-native \
         test-ci-js build-ci test-hash-seed clear-stalled  test-addons-napi \
         build-addons-napi
-
diff --git a/tools/install.py b/tools/install.py
index bb7d528..6dea6d6 100755
--- a/tools/install.py
+++ b/tools/install.py
@@ -110,7 +110,7 @@ def subdir_files(path, dest, action):
 def files(action):
   is_windows = sys.platform == 'win32'
   output_file = 'node'
-  output_prefix = 'out/Release/'
+  output_prefix = 'out/Debug/'

   if 'false' == variables.get('node_shared'):
     if is_windows:
@@ -131,7 +131,7 @@ def files(action):
     action([output_prefix + output_file], 'lib/' + output_file)

   if 'true' == variables.get('node_use_dtrace'):
-    action(['out/Release/node.d'], 'lib/dtrace/node.d')
+    action(['out/Debug/node.d'], 'lib/dtrace/node.d')

   # behave similarly for systemtap
   action(['src/node.stp'], 'share/systemtap/tapset/')
@@ -163,7 +163,7 @@ def headers(action):

   # Add the expfile that is created on AIX
   if sys.platform.startswith('aix'):
-    action(['out/Release/node.exp'], 'include/node/')
+    action(['out/Debug/node.exp'], 'include/node/')

   subdir_files('deps/v8/include', 'include/node/', action)

diff --git a/src/util.h b/src/util.h
index ecd5b12..aa7c41e 100644
--- a/src/util.h
+++ b/src/util.h
@@ -11,16 +11,8 @@
 #include <stdio.h>
 #include <stdlib.h>

-// OSX 10.9 defaults to libc++ which provides a C++11 <type_traits> header.
-#if defined(__APPLE__) && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1090
-#define USE_TR1_TYPE_TRAITS
-#endif

-#ifdef USE_TR1_TYPE_TRAITS
-#include <tr1/type_traits>  // NOLINT(build/c++tr1)
-#else
 #include <type_traits>  // std::remove_reference
-#endif

 namespace node {

@@ -47,11 +39,7 @@ NO_RETURN void Abort();
 NO_RETURN void Assert(const char* const (*args)[4]);
 void DumpBacktrace(FILE* fp);

-#ifdef USE_TR1_TYPE_TRAITS
-template <typename T> using remove_reference = std::tr1::remove_reference<T>;
-#else
 template <typename T> using remove_reference = std::remove_reference<T>;
-#endif

 #define FIXED_ONE_BYTE_STRING(isolate, string)                                \
   (node::OneByteString((isolate), (string), sizeof(string) - 1))
